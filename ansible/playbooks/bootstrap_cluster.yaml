- hosts: kubernetes_control_planes
  gather_facts: False

  tasks:
  - include_vars:
      file: ../vars.yaml

  - name: Create pod manifest for kube-vip
    import_role:
      name: kube-vip
    vars:
      bgp_peeraddress: "{{ kube_vip_bgp_peeraddress }}"
      vip_address: "{{ control_plane_endpoint_addr }}"
      image: "{{ kube_vip_image }}"

  - name: kubeadm certs certificate-key
    when: inventory_hostname == groups['kubernetes_control_planes'][0]
    become: yes
    shell: |-
      set -euo pipefail
      kubeadm certs certificate-key
    register: kubeadm_certs_certificate_key

  - name: Generate kubeadm config
    become: yes
    template:
      src: ./templates/kubeadm-config.yaml.j2
      dest: /tmp/kubeadm-config.yaml
    vars:
      certificate_key: "{{ hostvars[groups['kubernetes_control_planes'][0]]['kubeadm_certs_certificate_key']['stdout'] }}"

  - name: kubeadm init
    when: inventory_hostname == groups['kubernetes_control_planes'][0]
    become: yes
    shell: |-
      set -euo pipefail
      # use super-admin.conf
      # ref: https://github.com/kube-vip/kube-vip/issues/684
      sed -i 's#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#' \
        /etc/kubernetes/manifests/kube-vip.yaml
      kubeadm init \
        --config /tmp/kubeadm-config.yaml \
        --upload-certs
      sed -i 's#path: /etc/kubernetes/super-admin.conf#path: /etc/kubernetes/admin.conf#' \
        /etc/kubernetes/manifests/kube-vip.yaml

  - name: Setup kubeconfig
    when: inventory_hostname == groups['kubernetes_control_planes'][0]
    shell: |-
      set -euo pipefail
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config

  - name: Retrive kubeadm join command
    when: inventory_hostname == groups['kubernetes_control_planes'][0]
    become: yes
    shell: kubeadm token create --print-join-command
    register: kubeadm_join_command

  - name: kubeadm join (control-plane)
    when: inventory_hostname != groups['kubernetes_control_planes'][0]
    become: yes
    shell: |-
      set -euo pipefail
      {{ hostvars[groups['kubernetes_control_planes'][0]]['kubeadm_join_command']['stdout'] }} \
        --control-plane \
        --certificate-key "{{ hostvars[groups['kubernetes_control_planes'][0]]['kubeadm_certs_certificate_key']['stdout'] }}"

  - name: Setup kubeconfig
    when: inventory_hostname != groups['kubernetes_control_planes'][0]
    shell: |-
      set -euo pipefail
      mkdir -p $HOME/.kube
      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      sudo chown $(id -u):$(id -g) $HOME/.kube/config

  - name: Install Calico
    when: inventory_hostname == groups['kubernetes_control_planes'][0]
    shell: |-
      set -euo pipefail
      kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/tigera-operator.yaml
      curl -s -o- https://raw.githubusercontent.com/projectcalico/calico/v{{ calico_version }}/manifests/custom-resources.yaml |
        sed -e 's,192\.168\.0\.0/16,{{ pod_network_cidr }},' | kubectl create -f -  -n kube-system

- hosts: kubernetes_workers
  gather_facts: False

  tasks:
  - include_vars:
      file: ../vars.yaml

  - name: kubeadm join (worker)
    become: yes
    shell: |-
      set -euo pipefail
      {{ hostvars[groups['kubernetes_control_planes'][0]]['kubeadm_join_command']['stdout'] }}
